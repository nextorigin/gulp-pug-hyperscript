// Generated by IcedCoffeeScript 108.0.11
var PluginError, gulpPugHyperscript, gutil, jade, merge, path, through, vjade;

through = require("through2");

gutil = require("gulp-util");

path = require("path");

merge = require("merge");

jade = require("jade");

vjade = require("virtual-jade");

PluginError = gutil.PluginError;

gulpPugHyperscript = function(options) {
  var replaceExtension, transform;
  replaceExtension = function(path) {
    return gutil.replaceExtension(path, ".js");
  };
  transform = function(file, enc, cb) {
    var data, defaults, dest, err, str;
    if (file.isNull()) {
      return cb(null, file);
    }
    if (file.isStream()) {
      return cb(new PluginError("gulp-pug-hyperscript", "Streaming not supported"));
    }
    data = void 0;
    str = file.contents.toString("utf8");
    dest = replaceExtension(file.path);
    defaults = {
      filename: file.path,
      name: "_pug_template_fn",
      parser: jade.Parser,
      pretty: true,
      silent: true,
      runtime: vjade.runtime,
      "class": false,
      marshalDataset: true
    };
    options = merge(defaults, options);
    vjade.runtime = options.runtime;
    if (!options.silent) {
      console.log(str);
    }
    try {
      data = vjade(str, options);
      data += "\nmodule.exports = " + options.name + ";\n";
    } catch (_error) {
      err = _error;
      return cb(new PluginError("gulp-pug-hyperscript", err));
    }
    if (!options.silent) {
      console.log(data);
    }
    if (options["class"]) {
      data = data.replace(/"className":/g, '"class":');
    }
    file.contents = new Buffer(data);
    file.path = dest;
    return cb(null, file);
  };
  return through.obj(transform);
};

module.exports = gulpPugHyperscript;

//# sourceMappingURL=gulp-pug-hyperscript.js.map
